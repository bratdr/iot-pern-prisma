// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        String   @id @default(cuid())
  name      String   @unique
  user      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                String      @id @default(uuid())
  username          String      @unique
  email             String      @unique
  password          String
  passwordUpdatedAt DateTime
  accountIsVerified Boolean     @default(false)
  emailIsVerified   Boolean     @default(false)
  token             String?     @unique
  tokenExpiredAt    DateTime?
  tokenType         TOKEN_TYPE?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  role              Role        @relation(fields: [roleId], references: [id])
  roleId            String
  profil            Profil?
}

model Profil {
  id        String   @id @default(cuid())
  full_name String?
  photo     String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sekolah {
  id           String   @id @default(cuid())
  nama         String?
  alamat       String?
  nomorTelepon String?
  siswa        Siswa[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Siswa {
  id        String    @id @default(cuid())
  nisn      String?   @unique
  cardId    String?   @unique
  nama      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Sekolah   Sekolah?  @relation(fields: [sekolahId], references: [id])
  sekolahId String?
  Commute   Commute[]
  commuteId String?
}

model Commute {
  id                String   @id @default(cuid())
  startPosition     String?
  finishPosition    String?
  isActiveCommuting Boolean?
  siswa             Siswa[]
  bis               Bis[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Bis {
  id          String     @id @default(cuid())
  nomorPolisi String?    @unique
  merek       String?
  position    String?
  status      STATUS_BIS @default(NORMAL)
  supir       Supir?     @relation(fields: [supirId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  supirId     String?    @unique
  Commute     Commute[]
  commuteId   String?
}

model Supir {
  id           String   @id @default(cuid())
  nomorTelepon String?  @unique
  nama         String?
  alamat       String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Bis          Bis?
}

enum TOKEN_TYPE {
  RESET_TOKEN
  VERIFICATION_TOKEN
}

enum STATUS_BIS {
  NORMAL
  DARURAT
}
